#!/bin/bash
YAY=$(pacman -Qsq yay)
VUNDLE_DIR=~/.vim/bundle/Vundle.vim
AUTODARK_DIR=~/.config/autodark
LOCAL_BIN_DIR=~/.local/bin
#POEWRLINE_DIR=~/.config/powerline

print_head() {
	echo -e "	----------:: \c"
	echo -e "$1\c"
	echo " ::----------"
}

print() {
	echo -e "		\c"
	echo $1
}

print_help() {
	print_head HELP
	print "$1"
}
print_done() {
	print_head DONE
}

case $1 in
	"install" | "i")
		if [ "$YAY" == "" ]; then
			print "Yay is not installed on system. Installing it."
			git clone https://aur.archlinux.org/yay-bin.git
			cd yay-bin
			makepkg -sri --noconfirm
			cd ../
		fi
		case $2 in
		"depends" | "d")
			print_head "Installing AUR base development packages."
			sudo pacman -S --needed --noconfirm git base-devel python3 jq
			print_head "Installing vim, tmux, powerline"
			#yay -S --needed --noconfirm vim tmux powerline
			yay -S --needed --noconfirm powerline-fonts-git starship
			print_head "Copying Default powerline configurations"
			print_head "Installing Vundle"
			if [ ! -d "$VUNDLE_DIR" ]; then
				print_head "Cloning Vundle"
				git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
			else
				print_head "Vundle already installed. Pulling changes!"
				cd ~/.vim/bundle/Vundle.vim
				git pull
		   	fi
			vim +PluginInstall +qall
			#if [ ! -d "$POEWRLINE_DIR" ]; then
				#mkdir ~/.config/powerline
			   #fi
			#cp -r /usr/lib/python3.7/site-packages/powerline/config_files/* ~/.config/powerline
			#jq '.ext.tmux."colorscheme" = "solarized" | .ext.shell."colorscheme" = "solarized"' ~/.config/powerline/config.json > tmp.$$.json && mv -f tmp.$$.json ~/.config/powerline/config.json
			cd ~/.vim/bundle/YouCompleteMe
			git submodule udpate --init --recursive
			python3 install.py --rust-completer
			python3 install.py --js-completer
			print_done
		;;
		"autodark" | "ad")
			print_head "Installing autodark to local bin folder."
			sudo cp autodark/autodark.timer /usr/lib/systemd/user/
			sudo cp autodark/autodark.timer /usr/lib/systemd/user


			systemctl enable --user autodark.timer
			systemctl start --user autodark.timer

			if [ ! -d "$LOCAL_BIN_DIR" ]; then
				mkdir ~/.local/bin
			fi

			if [ ! -d "$AUTODARK_DIR" ]; then
				mkdir ~/.config/autodark
			fi

			sudo cp autodark/autodark ~/.local/bin/autodark
			sudo cp alacritty.yml ~/.config/autodark/
			sudo cp vimrc ~/.config/autodark/
			sudo cp -r dark ~/.config/autodark/
			sudo cp -r light ~/.config/autodark/
			print_done 
		;;
		"fonts" | "f")
			print_head "Installing Fira Sans and Merriweather."
			yay -S --needed --noconfirm ttf-merriweather ttf-fira-sans powerline-fonts-git
			print_done
		;;
		"all" | "a")
			print_head "Installing gpu and revstereo to local bin directory"
			$0 install depends
			$0 install autodark
			cp -r ./bin ~/.local/
			print_done
		;;
		*)
			print_help "./build install [ (d)epends | (ad) autodark | (f)onts | (a)ll ]"
		;;
		esac
	;;
	"apply" | "a")
		case $2 in
		"fonts" | "f")
			print_head "Copying Font configuration."
			cp ./fonts.conf ~/.config/fontconfig/
			print "Sans is: `fc-match sans`"
			print "Serif is: `fc-match serif`"
			print "Monospace is: `fc-match mono`"
			print_done
		;;
		"all" | "a")
			$0 apply fonts
			print_head "Copying vimrc, tmux and alacritty conf"
			mv ~/.vimrc ./vimrc.old
			mv ~/.tmux.conf ./tmux.conf.old
			cp ./tmux.conf ~/.tmux.conf
			cp ~/.config/alacritty/alacritty.yml ./alacritty.yml.old
			cat alacritty.yml >> cat light/alacritty.yml > ~/.config/alacritty/alacritty.yml
			cat vimrc >> cat light/vimrc > ~/.vimrc 
			print_done
		;;
		*)
			print_help "./build apply [ (a) all | (f)onts]"
		;;
		esac
	;;
	"restore" | "r")
		print_head "Restoring old vimrc and tmux conf"
		mv ./vimrc.old ~/.vimrc
		mv ./tmux.conf.old ~/.tmux.conf
		mv ./alacritty.yml.old ~/.config/alacritty/alacritty.yml 
		print_done
	;;
	*)
		print_help "./build [(i)nstall | (a)ppy | (r)estore ]"
	;;
esac
